{
  "tailwindCSS.includeLanguages": {
    "js": "javascript",
    "ts": "typescript",
    "jsx": "jsx",
    "tsx": "tsx"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "explorer.confirmDelete": false,
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "explorer.confirmDragAndDrop": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "scm.showHistoryGraph": false,
  "cursor.cmdk.useThemedDiffBackground": true,
  "editor.tabSize": 2,
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "search.quickOpen.history.filterSortOrder": "default",
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.editor.showTabs": "single"

  // "multiCommand.commands": [
  //   {
  //     "command": "multiCommand.multiEscape",
  //     "sequence": [
  //       // 聚焦到第一组编辑器上
  //       "workbench.action.focusFirstEditorGroup",
  //       // 同时触发 vim 的 esc 效果，避免一些bug 发生
  //       "extension.vim_escape",
  //       // 可选：关闭搜索栏图标
  //       "closeFindWidget",
  //       // 可选：关闭智能提示栏，有些时候会用到。
  //       "hideSuggestWidget",
  //       // 可选：关闭编辑器的提示，有时候 vscode 会报错，然后右下角弹窗口出来
  //       //      设定这个以后就可以用这个指令关闭了。
  //       "notifications.clearAll"
  //     ]
  //   }
  // ],
  // {
  //   "key": "escape",
  //   "command": "multiCommand.multiEscape",
  // },
  "vim.leader": " ",
  "vim.useSystemClipboard": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["s"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<S-l>"],
      "after": ["$"]
    },
    {
      "before": ["<S-h>"],
      "after": ["^"]
    },
    {
      "before": ["<S-j>"],
      "after": ["1", "0", "j"]
    },
    {
      "before": ["<S-k>"],
      "after": ["1", "0", "k"]
    },
    {
      "before": ["m"],
      "after": ["%"]
    },
    {
      "before": ["<leader>", "c", "j"],
      "commands": ["editor.action.revealDefinition"]
    },
    // {
    //   "before": ["<leader>", "s", "s"],
    //   "commands": ["actions.find"]
    // },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["fuzzySearchInOne.searchActiveEditor"]
      // "commands": ["fuzzySearch.activeTextEditor"]
    },
    {
      "before": ["<leader>", "s", "d"],
      // "commands": ["expand_region", "editor.action.clipboardCopyAction", "fuzzySearch.activeTextEditorWithCurrentSelection"]
      "commands": [
        "expand_region",
        "editor.action.clipboardCopyAction",
        "fuzzySearchInOne.searchActiveEditorWithSelection"
      ]
    },
    // {
    //   "before": ["<leader>", "s", "f"],
    //   "commands": ["actions.find"]
    // },
    {
      "before": ["<leader>", "s", "g"],
      "commands": ["search.action.openNewEditorToSide"]
      // "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", "g", "s"],
      "commands": ["workbench.view.scm"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"]
    },
    {
      "before": ["<leader>", ","],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "v"],
      "commands": ["expand_region"]
    },
    {
      "before": ["<leader>", "<leader>"],
      "commands": [
        "workbench.action.quickOpen",
        "workbench.action.quickOpenSelectNext"
      ]
    },
    {
      "before": ["<leader>", "f", "f"],
      "commands": [
        "workbench.action.quickOpen",
        "workbench.action.quickOpenSelectNext"
      ]
    },
    {
      "before": ["<leader>", "a", "c"],
      // "before": ["c"],
      "commands": ["aichat.newchataction"]
    },
    {
      "before": ["<leader>", "a", "e"],
      // "before": ["e"],
      "commands": ["aipopup.action.modal.generate"]
    },
    {
      "before": ["<leader>", "c", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "p", "t"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "w", "d"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "w", "h"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      "before": ["<leader>", "w", "v"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      // "before": ["<leader>", "<right>"],
      "before": ["<leader>", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      "before": ["<leader>", "h"],
      // "before": ["<leader>", "<left>"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      // "before": ["<leader>", "<down>"],
      "before": ["<leader>", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      // "before": ["<leader>", "<up>"],
      "before": ["<leader>", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["<leader>", "`"],
      "commands": "workbench.action.terminal.new"
      //"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    // {
    //   "before": ["<leader>", "p", "r"],
    //   "commands": ["godotTools.debugger.debugCurrentFile"]
    // },
    {
      "before": ["<leader>", "r", "r"],
      "commands": ["workbench.action.debug.start"],
      "when": "debugState == 'inactive'"
    },
    {
      "before": ["<leader>", "r", "r"],
      "commands": ["workbench.action.debug.restart"],
      "when": "debugState != 'inactive'"
    },
    {
      "before": ["<leader>", "r", "c"],
      "commands": ["godotTools.debugger.debugCurrentFile"]
    },
// {
//   "key": "f5",
//   "command": "workbench.action.debug.start",
//   "when": "debuggersAvailable && debugState == 'inactive'"
// }
    // {
    //   "before": ["j", "k"],
    //   "commands": [
    //     "closeParameterHints",
    //     "hideSuggestWidget",
    //     "closeMarkersNavigation",
    //     "closeFindWidget",
    //     "removeSecondaryCursors",
    //     "cancelSelection",
    //     "closeReferenceSearch",
    //     "closeReferenceSearchEditor",
    //     "closeReferences"
    //   ]
    // }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["s"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<S-l>"],
      "after": ["$"]
    },
    {
      "before": ["<S-h>"],
      "after": ["^"]
    },
    {
      "before": ["<S-j>"],
      "after": ["1", "0", "j"]
    },
    {
      "before": ["<S-k>"],
      "after": ["1", "0", "k"]
    },
    {
      "before": ["m"],
      "after": ["%"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"]
    },
    {
      "before": ["<leader>", "<leader>"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["fuzzySearchInOne.searchActiveEditor"]
      // "commands": ["fuzzySearch.activeTextEditor"]
    },
    {
      "before": ["<leader>", "s", "d"],
      "commands": [
        // "editor.action.clipboardCopyAction",
        "fuzzySearchInOne.searchActiveEditorWithSelection"
      ]
    },
    // {
    //   "before": ["<leader>", "s", "f"],
    //   "commands": ["actions.find"]
    // },
    {
      "before": ["<leader>", "s", "g"],
      "commands": ["search.action.openNewEditorToSide"]
      // "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["v"],
      "commands": ["expand_region"],
      "when": "vim.mode == 'Normal' && editorHasSelection"
    },
    {
      "before": ["<leader>", ","],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "a", "c"],
      // "before": ["c"],
      "commands": ["aichat.newchataction"]
    },
    {
      "before": ["<leader>", "a", "e"],
      // "before": ["e"],
      "commands": ["aipopup.action.modal.generate"]
    },
    {
      "before": ["j", "k"],
      "after": ["<esc>"]
    }
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": ["j", "k"],
      "after": ["<esc>"]
    }
  ],
  "vim.commandLineModeKeyBindingsNonRecursive": [
    {
      "before": ["j", "k"],
      "after": ["<esc>"]
    }
  ],
  "cursor.chat.smoothStreaming": true,
  "git.autofetch": true,
  "git.confirmSync": false,
}
